---
import LayoutWrapper from "../components/LayoutWrapper";
import Navbar from "../components/Navbar.astro";
import Preloader from "../components/Preloader.astro";
import ToggleBottomBar from "../components/ToggleBottomBar";
import { ViewTransitions } from "astro:transitions";
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<head>
  <meta charset="UTF-8" />
  <meta name="description" content="Astro description" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="generator" content={Astro.generator} />

  <title>{title}</title>
  <!-- <ViewTransitions /> -->
</head>
<body data-barba="wrapper">
  <div
    class="fixed flex justify-center items-center top-0 bg-black z-2 pointer-events-none w-full h-full"
    id="transitiondiv"
  >
  </div>
  <div
    class="w-full h-full absolute top-0 flex justify-center items-center pointer-events-none z-10"
  >
    <h1
      class="pointer-events-none text-white text-4xl font-italic underline-dotted underline-white"
      id="navigateLabel"
    >
    </h1>
  </div>
  <Preloader />
  <Navbar />
  <LayoutWrapper client:load>
    <slot />
  </LayoutWrapper>
  <ToggleBottomBar client:only />
</body>

<style>
  #transitiondiv {
    transform: scaleX(0);
    top: 0;
    left: 0;
    transform-origin: center;
  }
</style>
<script>
  import barba from "@barba/core";
  import { animate, timeline, spring } from "motion";

  const trans = document.getElementById("transitiondiv");
  const sequence: any = [
    [trans, { top: ["100vh", 0] }, { duration: 0.5, easing: "ease-in" }],

    [
      trans,
      { scaleX: [1, 0] },
      { duration: 0.5, delay: 0.5, easing: "ease-in-out" },
    ],
  ];
  const textsequence: any = [
    [
      "#navigateLabel",
      { y: ["100vh", 0] },
      { duration: 2, delay: 0.5, easing: [0.71, 0.03, 0.19, 0.91] },
    ],
    [
      "#navigateLabel",
      { y: [0, "-100vh"] },
      { duration: 1.5, delay: 0.5, easing: "ease-in-out" },
    ],
  ];

  function delay(n: number): Promise<void> {
    n = n || 0;
    return new Promise((resolve): void => {
      setTimeout(() => {
        resolve();
      }, n);
    });
  }

  const label = document.querySelector("#navigateLabel");

  barba.init({
    transitions: [
      {
        async leave(data) {
          const done: any = this?.async?.();

          //   timeline(sequence, { duration: 2.5 });
          const transcontrol = timeline(sequence, { duration: 2.5 });
          label.innerHTML = `<span class="">Navigating to ${
            data.next.url.path?.split("/")[1]
              ? data.next.url.path?.split("/")[1]
              : "Home"
          }</span>`;
          timeline(textsequence, { duration: 2.5 });
          await delay(1000);
          done();
        },
      },
    ],
  });
</script>
